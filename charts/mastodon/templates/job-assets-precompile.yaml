{{- if .Values.mastodon.hooks.assetsPrecompile.enabled -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "mastodon.fullname" . }}-assets-precompile
  labels:
    {{- include "mastodon.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "-2"
spec:
  template:
    metadata:
      name: {{ include "mastodon.fullname" . }}-assets-precompile
      {{- with .Values.jobAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      restartPolicy: Never
      {{- if (not .Values.mastodon.s3.enabled) }}
      # ensure we run on the same node as the other rails components; only
      # required when using PVCs that are ReadWriteOnce
      {{- if or (eq "ReadWriteOnce" .Values.mastodon.persistence.assets.accessMode) (eq "ReadWriteOnce" .Values.mastodon.persistence.system.accessMode) }}
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/part-of
                    operator: In
                    values:
                      - rails
              topologyKey: kubernetes.io/hostname
      {{- end }}
      volumes:
        - name: assets
          persistentVolumeClaim:
            claimName: {{ template "mastodon.pvc.assets" . }}
        - name: system
          persistentVolumeClaim:
            claimName: {{ template "mastodon.pvc.system" . }}
      {{- else }}
      volumes:
        - name: assets
          emptyDir: {}
        - name: system
          emptyDir: {}
      {{- end }}
      initContainers:
        - name: {{ include "mastodon.fullname" . }}-assets-precompile
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - bash
            - -c
            - |
                bundle exec rake assets:precompile && yarn cache clean
          envFrom:
            - configMapRef:
                name: {{ include "mastodon.fullname" . }}-env
            - secretRef:
                name: {{ template "mastodon.secretName" . }}
          env:
            - name: "DB_PASS"
              valueFrom:
                secretKeyRef:
                  name: {{ template "mastodon.postgresql.secretName" . }}
                  key: password
            - name: "REDIS_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: {{ template "mastodon.redis.secretName" . }}
                  key: redis-password
            {{- if and .Values.redis.sidekiq.enabled .Values.redis.sidekiq.auth.existingSecret }}
            - name: "SIDEKIQ_REDIS_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: {{ template "mastodon.redis.sidekiq.secretName" . }}
                  key: redis-password
            {{- end }}
            {{- if and .Values.redis.cache.enabled .Values.redis.cache.auth.existingSecret }}
            - name: "CACHE_REDIS_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: {{ template "mastodon.redis.cache.secretName" . }}
                  key: redis-password
            {{- end }}
            - name: "PORT"
              value: {{ .Values.mastodon.web.port | quote }}
            {{- if (and .Values.mastodon.s3.enabled .Values.mastodon.s3.cdn_host) }}
            - name: "CDN_HOST"
              value: {{ .Values.mastodon.s3.cdn_host }}
            {{- end }}
            {{- if (and .Values.mastodon.s3.enabled .Values.mastodon.s3.existingSecret) }}
            - name: "AWS_SECRET_ACCESS_KEY"
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mastodon.s3.existingSecret }}
                  key: AWS_SECRET_ACCESS_KEY
            - name: "AWS_ACCESS_KEY_ID"
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mastodon.s3.existingSecret }}
                  key: AWS_ACCESS_KEY_ID
          volumeMounts:
            - name: assets
              mountPath: /opt/mastodon/public/assets
            - name: system
              mountPath: /opt/mastodon/public/system
            {{- end }}
      containers:
        - name: {{ include "mastodon.fullname" . }}-assets-sync
          image: "{{ .Values.mastodon.s3.mcImage }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            {{- if (and .Values.mastodon.s3.enabled .Values.mastodon.s3.cdn_host) }}
            - sh
            - -c
            - |
                mc alias set target "https://{{ .Values.mastodon.s3.endpoint | replace "https://" "" | replace "s3://" "" }}" "${AWS_ACCESS_KEY_ID}" "${AWS_SECRET_ACCESS_KEY}" && \
                mc mirror --md5 --preserve --overwrite --attr x-amz-acl=public-read --remove --no-color --exclude "accounts/*" --exclude "backups/*" --exclude "cache/*" --exclude "custom_emojis/*" --exclude "media_attachments/*" --exclude "site_uploads/*" "/opt/mastodon/public" "target/{{ .Values.mastodon.s3.bucket }}" && \
                echo COMPLETE!
            {{- else }}
            - sh
            - -c
            - |
                echo COMPLETE!
            {{- end }}
          envFrom:
            - configMapRef:
                name: {{ include "mastodon.fullname" . }}-env
            - secretRef:
                name: {{ template "mastodon.secretName" . }}
          env:
            {{- if (and .Values.mastodon.s3.enabled .Values.mastodon.s3.existingSecret) }}
            - name: "AWS_SECRET_ACCESS_KEY"
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mastodon.s3.existingSecret }}
                  key: AWS_SECRET_ACCESS_KEY
            - name: "AWS_ACCESS_KEY_ID"
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mastodon.s3.existingSecret }}
                  key: AWS_ACCESS_KEY_ID
            {{- end }}
          volumeMounts:
            - name: assets
              mountPath: /opt/mastodon/public/assets
            - name: system
              mountPath: /opt/mastodon/public/system
{{- end -}}
