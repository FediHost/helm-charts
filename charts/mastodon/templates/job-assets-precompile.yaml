apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "mastodon.fullname" . }}-assets-precompile
  labels:
    {{- include "mastodon.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "-2"
spec:
  template:
    metadata:
      name: {{ include "mastodon.fullname" . }}-assets-precompile
      {{- with .Values.jobAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      restartPolicy: Never
      {{- if (not .Values.mastodon.s3.enabled) }}
      # ensure we run on the same node as the other rails components; only
      # required when using PVCs that are ReadWriteOnce
      {{- if or (eq "ReadWriteOnce" .Values.mastodon.persistence.assets.accessMode) (eq "ReadWriteOnce" .Values.mastodon.persistence.system.accessMode) }}
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/part-of
                    operator: In
                    values:
                      - rails
              topologyKey: kubernetes.io/hostname
      {{- end }}
      {{- end }}
      volumes:
        {{- if .Values.mastodon.s3.enabled }}
        - name: assets
          emptyDir:
            sizeLimit: 1Gi
        - name: system
          emptyDir:
            sizeLimit: 1Gi
        {{- else }}
        - name: assets
          persistentVolumeClaim:
            claimName: {{ template "mastodon.fullname" . }}-assets
        - name: system
          persistentVolumeClaim:
            claimName: {{ template "mastodon.fullname" . }}-system
        {{- end }}
      containers:
        - name: {{ include "mastodon.fullname" . }}-assets-precompile
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - bash
            - -c
            - |
                bundle exec rake assets:precompile && yarn cache clean && ls -lah /opt/mastodon/public
          envFrom:
            - configMapRef:
                name: {{ include "mastodon.fullname" . }}-env
            - secretRef:
                name: {{ template "mastodon.secretName" . }}
          env:
            - name: "DB_PASS"
              valueFrom:
                secretKeyRef:
                  name: {{ template "mastodon.postgresql.secretName" . }}
                  key: password
            - name: "REDIS_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: {{ template "mastodon.redis.secretName" . }}
                  key: redis-password
            - name: "PORT"
              value: {{ .Values.mastodon.web.port | quote }}
          volumeMounts:
            - name: assets
              mountPath: /opt/mastodon/public/assets
            - name: system
              mountPath: /opt/mastodon/public/system
        {{- if .Values.mastodon.s3.enabled }}
        {{- if .Values.mastodon.s3.cdn_host }}
        - name: {{ include "mastodon.fullname" . }}-assets-sync
          image: "{{ .Values.mastodon.s3.s3cmdImage }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - sh
            - -c
            - |
                export AWS_DEFAULT_REGION="{{ .Values.mastodon.s3.region }}" &&
                s3cmd sync --acl-public --delete-removed /opt/mastodon/public/inert.css s3://{{ .Values.mastodon.s3.endpoint | replace "https://" ""}}/{{ .Values.mastodon.s3.bucket }}/inert.css &&
                s3cmd sync --acl-public --delete-removed /opt/mastodon/public/assets/ s3://{{ .Values.mastodon.s3.endpoint | replace "https://" ""}}/{{ .Values.mastodon.s3.bucket }}/assets/ &&
                s3cmd sync --acl-public --delete-removed /opt/mastodon/public/packs/ s3://{{ .Values.mastodon.s3.endpoint | replace "https://" ""}}/{{ .Values.mastodon.s3.bucket }}/packs/
          envFrom:
            - configMapRef:
                name: {{ include "mastodon.fullname" . }}-env
            - secretRef:
                name: {{ template "mastodon.secretName" . }}
          env:
            - name: "DB_PASS"
              valueFrom:
                secretKeyRef:
                  name: {{ template "mastodon.postgresql.secretName" . }}
                  key: password
            - name: "REDIS_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: {{ template "mastodon.redis.secretName" . }}
                  key: redis-password
            - name: "PORT"
              value: {{ .Values.mastodon.web.port | quote }}
          volumeMounts:
            - name: assets
              mountPath: /opt/mastodon/public/assets
            - name: system
              mountPath: /opt/mastodon/public/system
        {{- end }}
        {{- end }}
